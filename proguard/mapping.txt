com.canbot.network.FTPUtils -> com.canbot.a.a:
    com.canbot.network.FTPUtils ftpUtils -> a
    com.canbot.network.FTPUtils getInstance() -> a
    void ftpDown(java.lang.String,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> a
com.canbot.network.HttpUtils -> com.canbot.a.b:
    com.canbot.network.HttpUtils httpUtils -> a
    com.canbot.network.HttpUtils getInstance() -> a
    void downLoadFromUrl(java.lang.String,java.lang.String,java.lang.String) -> a
    byte[] readInputStream(java.io.InputStream) -> a
com.canbot.operator.BootBroadcastReceive -> com.canbot.operator.BootBroadcastReceive:
    java.lang.String BOOT_ACTION -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.canbot.operator.CrashHandler -> com.canbot.operator.a:
    java.lang.Thread$UncaughtExceptionHandler mDefaultHandler -> a
    android.content.Context mContext -> b
    java.util.Map mInfos -> c
    java.text.DateFormat formatter -> d
    com.canbot.operator.CrashHandler INSTANCE -> e
    com.canbot.operator.CrashHandler getInstance() -> a
    void init(android.content.Context) -> a
    void uncaughtException(java.lang.Thread,java.lang.Throwable) -> uncaughtException
    boolean handleException(java.lang.Throwable) -> a
    void collectDeviceInfo(android.content.Context) -> b
    java.lang.String saveCrashInfo2File(java.lang.Throwable) -> b
    android.content.Context access$0(com.canbot.operator.CrashHandler) -> a
com.canbot.operator.CrashHandler$1 -> com.canbot.operator.b:
    com.canbot.operator.CrashHandler this$0 -> a
    void run() -> run
com.canbot.operator.MyApplication -> com.canbot.operator.MyApplication:
    void onCreate() -> onCreate
com.canbot.operator.OperatorInfo -> com.canbot.operator.c:
    int version -> a
    int length -> b
    java.lang.String url -> c
    int getVersion() -> a
    void setVersion(int) -> a
    int getLength() -> b
    void setLength(int) -> b
    java.lang.String getUrl() -> c
    void setUrl(java.lang.String) -> a
com.canbot.operator.OperatorService -> com.canbot.operator.OperatorService:
    int APKVERSION -> b
    java.lang.String PACKAGE_NAME -> c
    java.lang.String PATH_Dir_CLIENT -> d
    java.lang.String PATH_ADVERT_CLIENT -> e
    java.lang.String PATH_FAULT_CLIENT -> f
    java.lang.String PATH_STATUS_CLIENT -> g
    java.lang.String PATH_ARCHIVE_CLIENT -> h
    java.lang.String PATH_NEWS_CLIENT -> i
    java.lang.String PATH_DROPBEAR -> j
    java.lang.String PATH_OPENVPN -> k
    java.lang.String PATH_CHECKSTATUS -> l
    java.lang.String PATH_COLLECTLOG -> m
    java.lang.String PATH_LOG_CLIENT -> n
    java.lang.String PATH_READSQLITE -> o
    java.lang.String PATH_TIMEAXIS_CLIENT -> p
    com.canbot.operator.OperatorService operatorService -> a
    void onCreate() -> onCreate
    int onStartCommand(android.content.Intent,int,int) -> onStartCommand
    void ExecCmd(java.lang.String) -> a
    void CopyAssets(android.content.Context,java.lang.String,java.lang.String) -> a
    boolean isAppInstalled(java.lang.String) -> b
    boolean fileIsExist(java.lang.String) -> c
    android.os.IBinder onBind(android.content.Intent) -> onBind
    void onDestroy() -> onDestroy
    int access$0() -> a
    void access$1(com.canbot.operator.OperatorService,java.lang.String) -> a
    java.lang.String access$2() -> b
    java.lang.String access$3() -> c
    boolean access$4(com.canbot.operator.OperatorService,java.lang.String) -> b
    java.lang.String access$5() -> d
    java.lang.String access$6() -> e
    java.lang.String access$7() -> f
    java.lang.String access$8() -> g
    java.lang.String access$9() -> h
    java.lang.String access$10() -> i
    java.lang.String access$11() -> j
    java.lang.String access$12() -> k
    java.lang.String access$13() -> l
    java.lang.String access$14() -> m
    java.lang.String access$15() -> n
    boolean access$16(com.canbot.operator.OperatorService,java.lang.String) -> c
com.canbot.operator.OperatorService$1 -> com.canbot.operator.d:
    com.canbot.operator.OperatorService this$0 -> a
    void run() -> run
com.canbot.operator.OperatorService$1$1 -> com.canbot.operator.e:
    com.canbot.operator.OperatorService$1 this$1 -> a
    void run() -> run
com.canbot.operator.OperatorService$1$2 -> com.canbot.operator.f:
    com.canbot.operator.OperatorService$1 this$1 -> a
    java.lang.String val$ftpfile -> b
    void run() -> run
com.canbot.operator.OperatorService$NetStatus -> com.canbot.operator.g:
    com.canbot.operator.OperatorService this$0 -> a
    void run() -> run
com.canbot.operator.SilentInstall -> com.canbot.operator.h:
    boolean install(java.lang.String) -> a
com.canbot.operator.Utils -> com.canbot.operator.i:
    java.lang.String get_machine_number() -> a
    void print_data(java.lang.String,java.lang.String) -> a
    void mk_all_dir() -> b
    void ExecCmd(java.lang.String) -> a
    long getFileSize(java.io.File) -> a
    boolean isFileExists(java.io.File) -> b
    boolean isOnline(android.content.Context) -> a
    void write_networe_status(java.lang.String) -> b
    com.canbot.operator.OperatorInfo get_server_apk_version() -> c
    java.lang.String getProp(java.lang.String) -> c
    java.lang.String get_network_status() -> d
    int getFilelength(java.lang.String) -> d
    void debugger(java.lang.String) -> e
org.apache.commons.net.MalformedServerReplyException -> a.a.a.a.a:
org.apache.commons.net.ProtocolCommandEvent -> a.a.a.a.b:
    int __replyCode -> a
    boolean __isCommand -> b
    java.lang.String __message -> c
    java.lang.String __command -> d
org.apache.commons.net.ProtocolCommandListener -> a.a.a.a.c:
    void protocolCommandSent(org.apache.commons.net.ProtocolCommandEvent) -> a
    void protocolReplyReceived(org.apache.commons.net.ProtocolCommandEvent) -> b
org.apache.commons.net.ProtocolCommandSupport -> a.a.a.a.d:
    java.lang.Object __source -> a
    org.apache.commons.net.util.ListenerList __listeners -> b
    void fireCommandSent(java.lang.String,java.lang.String) -> a
    void fireReplyReceived(int,java.lang.String) -> a
    int getListenerCount() -> a
org.apache.commons.net.SocketClient -> a.a.a.a.e:
    javax.net.SocketFactory __DEFAULT_SOCKET_FACTORY -> i
    javax.net.ServerSocketFactory __DEFAULT_SERVER_SOCKET_FACTORY -> j
    org.apache.commons.net.ProtocolCommandSupport __commandSupport -> k
    int _timeout_ -> a
    java.net.Socket _socket_ -> b
    int _defaultPort_ -> c
    java.io.InputStream _input_ -> d
    java.io.OutputStream _output_ -> e
    javax.net.SocketFactory _socketFactory_ -> f
    javax.net.ServerSocketFactory _serverSocketFactory_ -> g
    int connectTimeout -> h
    int receiveBufferSize -> l
    int sendBufferSize -> m
    java.nio.charset.Charset charset -> n
    void _connectAction_() -> a
    void connect(java.net.InetAddress,int) -> a
    void connect(java.lang.String,int) -> a
    void disconnect() -> b
    void closeQuietly(java.net.Socket) -> b
    void closeQuietly(java.io.Closeable) -> a
    boolean isConnected() -> c
    void setDefaultPort(int) -> a
    java.net.InetAddress getLocalAddress() -> d
    java.net.InetAddress getRemoteAddress() -> e
    boolean verifyRemote(java.net.Socket) -> a
    void fireReplyReceived(int,java.lang.String) -> a
    void fireCommandSent(java.lang.String,java.lang.String) -> a
    org.apache.commons.net.ProtocolCommandSupport getCommandSupport() -> f
org.apache.commons.net.ftp.FTP -> a.a.a.a.a.a:
    int _replyCode -> i
    java.util.ArrayList _replyLines -> j
    boolean _newReplyString -> k
    java.lang.String _replyString -> l
    java.lang.String _controlEncoding -> m
    org.apache.commons.net.ProtocolCommandSupport _commandSupport_ -> n
    boolean strictMultilineParsing -> o
    java.io.BufferedReader _controlInput_ -> p
    java.io.BufferedWriter _controlOutput_ -> q
    boolean __strictCheck(java.lang.String,java.lang.String) -> c
    boolean __lenientCheck(java.lang.String) -> e
    void __getReply() -> p
    void __getReply(boolean) -> a
    void _connectAction_() -> a
    void setControlEncoding(java.lang.String) -> a
    java.lang.String getControlEncoding() -> g
    void disconnect() -> b
    int sendCommand(java.lang.String,java.lang.String) -> b
    java.lang.String __buildMessage(java.lang.String,java.lang.String) -> d
    void __send(java.lang.String) -> f
    int sendCommand(org.apache.commons.net.ftp.FTPCmd) -> a
    int sendCommand(org.apache.commons.net.ftp.FTPCmd,java.lang.String) -> a
    int getReplyCode() -> h
    java.lang.String[] getReplyStrings() -> i
    java.lang.String getReplyString() -> j
    int user(java.lang.String) -> b
    int pass(java.lang.String) -> c
    int quit() -> k
    int port(java.net.InetAddress,int) -> b
    int eprt(java.net.InetAddress,int) -> c
    int pasv() -> l
    int epsv() -> m
    int type(int) -> b
    int feat() -> n
    int rest(java.lang.String) -> d
    boolean isStrictMultilineParsing() -> o
    org.apache.commons.net.ProtocolCommandSupport getCommandSupport() -> f
org.apache.commons.net.ftp.FTPClient -> a.a.a.a.a.b:
    int __dataConnectionMode -> r
    int __dataTimeout -> s
    int __passivePort -> t
    java.lang.String __passiveHost -> u
    java.util.Random __random -> v
    int __activeMinPort -> w
    int __activeMaxPort -> x
    java.net.InetAddress __activeExternalHost -> y
    java.net.InetAddress __reportActiveExternalHost -> z
    java.net.InetAddress __passiveLocalHost -> A
    int __fileType -> B
    int __fileFormat -> C
    int __fileStructure -> D
    int __fileTransferMode -> E
    boolean __remoteVerificationEnabled -> F
    long __restartOffset -> G
    org.apache.commons.net.ftp.parser.FTPFileEntryParserFactory __parserFactory -> H
    int __bufferSize -> I
    int __sendDataSocketBufferSize -> J
    int __receiveDataSocketBufferSize -> K
    boolean __listHiddenFiles -> L
    boolean __useEPSVwithIPv4 -> M
    java.lang.String __systemName -> N
    org.apache.commons.net.ftp.FTPFileEntryParser __entryParser -> O
    java.lang.String __entryParserKey -> P
    org.apache.commons.net.ftp.FTPClientConfig __configuration -> Q
    int __controlKeepAliveReplyTimeout -> R
    boolean __passiveNatWorkaround -> S
    java.util.regex.Pattern __PARMS_PAT -> T
    boolean __autodetectEncoding -> U
    java.util.HashMap __featuresMap -> V
    void __initDefaults() -> r
    void _parsePassiveModeReply(java.lang.String) -> e
    void _parseExtendedPassiveModeReply(java.lang.String) -> f
    java.net.Socket _openDataConnection_(java.lang.String,java.lang.String) -> c
    void _connectAction_() -> a
    void disconnect() -> b
    boolean login(java.lang.String,java.lang.String) -> d
    boolean logout() -> p
    int getActivePort() -> s
    java.net.InetAddress getHostAddress() -> t
    java.net.InetAddress getReportHostAddress() -> u
    boolean setFileType(int) -> c
    java.io.InputStream retrieveFileStream(java.lang.String) -> g
    java.io.InputStream _retrieveFileStream(java.lang.String,java.lang.String) -> e
    boolean hasFeature(java.lang.String) -> h
    boolean initFeatureMap() -> v
    boolean restart(long) -> a
    boolean isUseEPSVwithIPv4() -> q
    java.io.InputStream getBufferedInputStream(java.io.InputStream) -> a
org.apache.commons.net.ftp.FTPClientConfig -> a.a.a.a.a.c:
    java.util.Map LANGUAGE_CODE_MAP -> a
org.apache.commons.net.ftp.FTPCmd -> a.a.a.a.a.d:
    org.apache.commons.net.ftp.FTPCmd ABOR -> a
    org.apache.commons.net.ftp.FTPCmd ACCT -> b
    org.apache.commons.net.ftp.FTPCmd ALLO -> c
    org.apache.commons.net.ftp.FTPCmd APPE -> d
    org.apache.commons.net.ftp.FTPCmd CDUP -> e
    org.apache.commons.net.ftp.FTPCmd CWD -> f
    org.apache.commons.net.ftp.FTPCmd DELE -> g
    org.apache.commons.net.ftp.FTPCmd EPRT -> h
    org.apache.commons.net.ftp.FTPCmd EPSV -> i
    org.apache.commons.net.ftp.FTPCmd FEAT -> j
    org.apache.commons.net.ftp.FTPCmd HELP -> k
    org.apache.commons.net.ftp.FTPCmd LIST -> l
    org.apache.commons.net.ftp.FTPCmd MDTM -> m
    org.apache.commons.net.ftp.FTPCmd MFMT -> n
    org.apache.commons.net.ftp.FTPCmd MKD -> o
    org.apache.commons.net.ftp.FTPCmd MLSD -> p
    org.apache.commons.net.ftp.FTPCmd MLST -> q
    org.apache.commons.net.ftp.FTPCmd MODE -> r
    org.apache.commons.net.ftp.FTPCmd NLST -> s
    org.apache.commons.net.ftp.FTPCmd NOOP -> t
    org.apache.commons.net.ftp.FTPCmd PASS -> u
    org.apache.commons.net.ftp.FTPCmd PASV -> v
    org.apache.commons.net.ftp.FTPCmd PORT -> w
    org.apache.commons.net.ftp.FTPCmd PWD -> x
    org.apache.commons.net.ftp.FTPCmd QUIT -> y
    org.apache.commons.net.ftp.FTPCmd REIN -> z
    org.apache.commons.net.ftp.FTPCmd REST -> A
    org.apache.commons.net.ftp.FTPCmd RETR -> B
    org.apache.commons.net.ftp.FTPCmd RMD -> C
    org.apache.commons.net.ftp.FTPCmd RNFR -> D
    org.apache.commons.net.ftp.FTPCmd RNTO -> E
    org.apache.commons.net.ftp.FTPCmd SITE -> F
    org.apache.commons.net.ftp.FTPCmd SMNT -> G
    org.apache.commons.net.ftp.FTPCmd STAT -> H
    org.apache.commons.net.ftp.FTPCmd STOR -> I
    org.apache.commons.net.ftp.FTPCmd STOU -> J
    org.apache.commons.net.ftp.FTPCmd STRU -> K
    org.apache.commons.net.ftp.FTPCmd SYST -> L
    org.apache.commons.net.ftp.FTPCmd TYPE -> M
    org.apache.commons.net.ftp.FTPCmd USER -> N
    org.apache.commons.net.ftp.FTPCmd ABORT -> O
    org.apache.commons.net.ftp.FTPCmd ACCOUNT -> P
    org.apache.commons.net.ftp.FTPCmd ALLOCATE -> Q
    org.apache.commons.net.ftp.FTPCmd APPEND -> R
    org.apache.commons.net.ftp.FTPCmd CHANGE_TO_PARENT_DIRECTORY -> S
    org.apache.commons.net.ftp.FTPCmd CHANGE_WORKING_DIRECTORY -> T
    org.apache.commons.net.ftp.FTPCmd DATA_PORT -> U
    org.apache.commons.net.ftp.FTPCmd DELETE -> V
    org.apache.commons.net.ftp.FTPCmd FEATURES -> W
    org.apache.commons.net.ftp.FTPCmd FILE_STRUCTURE -> X
    org.apache.commons.net.ftp.FTPCmd GET_MOD_TIME -> Y
    org.apache.commons.net.ftp.FTPCmd LOGOUT -> Z
    org.apache.commons.net.ftp.FTPCmd MAKE_DIRECTORY -> aa
    org.apache.commons.net.ftp.FTPCmd MOD_TIME -> ab
    org.apache.commons.net.ftp.FTPCmd NAME_LIST -> ac
    org.apache.commons.net.ftp.FTPCmd PASSIVE -> ad
    org.apache.commons.net.ftp.FTPCmd PASSWORD -> ae
    org.apache.commons.net.ftp.FTPCmd PRINT_WORKING_DIRECTORY -> af
    org.apache.commons.net.ftp.FTPCmd REINITIALIZE -> ag
    org.apache.commons.net.ftp.FTPCmd REMOVE_DIRECTORY -> ah
    org.apache.commons.net.ftp.FTPCmd RENAME_FROM -> ai
    org.apache.commons.net.ftp.FTPCmd RENAME_TO -> aj
    org.apache.commons.net.ftp.FTPCmd REPRESENTATION_TYPE -> ak
    org.apache.commons.net.ftp.FTPCmd RESTART -> al
    org.apache.commons.net.ftp.FTPCmd RETRIEVE -> am
    org.apache.commons.net.ftp.FTPCmd SET_MOD_TIME -> an
    org.apache.commons.net.ftp.FTPCmd SITE_PARAMETERS -> ao
    org.apache.commons.net.ftp.FTPCmd STATUS -> ap
    org.apache.commons.net.ftp.FTPCmd STORE -> aq
    org.apache.commons.net.ftp.FTPCmd STORE_UNIQUE -> ar
    org.apache.commons.net.ftp.FTPCmd STRUCTURE_MOUNT -> as
    org.apache.commons.net.ftp.FTPCmd SYSTEM -> at
    org.apache.commons.net.ftp.FTPCmd TRANSFER_MODE -> au
    org.apache.commons.net.ftp.FTPCmd USERNAME -> av
    org.apache.commons.net.ftp.FTPCmd[] $VALUES -> aw
    org.apache.commons.net.ftp.FTPCmd[] values() -> values
    org.apache.commons.net.ftp.FTPCmd valueOf(java.lang.String) -> valueOf
    java.lang.String getCommand() -> a
org.apache.commons.net.ftp.FTPConnectionClosedException -> a.a.a.a.a.e:
org.apache.commons.net.ftp.FTPFileEntryParser -> a.a.a.a.a.f:
org.apache.commons.net.ftp.FTPReply -> a.a.a.a.a.g:
    boolean isPositivePreliminary(int) -> a
    boolean isPositiveCompletion(int) -> b
    boolean isPositiveIntermediate(int) -> c
org.apache.commons.net.ftp.parser.DefaultFTPFileEntryParserFactory -> a.a.a.a.a.a.a:
    java.util.regex.Pattern JAVA_QUALIFIED_NAME_PATTERN -> a
org.apache.commons.net.ftp.parser.FTPFileEntryParserFactory -> a.a.a.a.a.a.b:
org.apache.commons.net.io.CRLFLineReader -> a.a.a.a.b.a:
    java.lang.String readLine() -> readLine
org.apache.commons.net.io.FromNetASCIIInputStream -> a.a.a.a.b.b:
    boolean _noConversionRequired -> a
    java.lang.String _lineSeparator -> b
    byte[] _lineSeparatorBytes -> c
    int __length -> d
    int __read() -> a
    int read() -> read
    int read(byte[]) -> read
    int read(byte[],int,int) -> read
    int available() -> available
org.apache.commons.net.io.SocketInputStream -> a.a.a.a.b.c:
    java.net.Socket __socket -> a
    void close() -> close
org.apache.commons.net.util.ListenerList -> a.a.a.a.c.a:
    java.util.concurrent.CopyOnWriteArrayList __listeners -> a
    int getListenerCount() -> a
    java.util.Iterator iterator() -> iterator
